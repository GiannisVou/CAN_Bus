
DESCRIPTION of the used schema.
	It does follow the approach of CMU where we divide the 8 bytes 
	for data, to two sections, one actually used for data(in this example 4 bytes)
	and the other 4 bytes can be used to represent authentication codes(MACs)

	
	
	
	
The next table describes how the nodes form their MACs in this demo.	
	
 --where	[N.d]	Stands for Non-defined(we can place
		random values in their possition)

---------------------------------------------------------
----------------------------------------------------	|
NODE transmiting	MAC1 | MAC2 |  MAC3 |  MAC4 |	|
----------------------------------------------------	|
	1		 2	4	7	8   |	|
----------------------------------------------------	|
	2		 1	5	6	9   |	|
----------------------------------------------------	|
	3		 4	9	8	6   |	|
----------------------------------------------------	|
	4		 3	1	N.d	7   |   |
----------------------------------------------------    |
	5		 6	2	N.d	N.d |	| 
----------------------------------------------------	| 
	6		 5	8	2	3   |	| 		
----------------------------------------------------	| 
	7		N.d	N.d	1	4   |	| 
----------------------------------------------------	| 
	8		N.d	6	3	1   |	| 
----------------------------------------------------	| 
	9		N.d	3	N.d	2   |	| 
----------------------------------------------------	| 
---------------------------------------------------------


	__________________
  	|  GROUPING NODES  |
	 ------------------ 

One idea for Grouping some Nodes together could be that they use the same 
MAC when they are receiving  message from a specific sender, but then with 
their respective mask's and filter's they can cutoff or accept the message.
